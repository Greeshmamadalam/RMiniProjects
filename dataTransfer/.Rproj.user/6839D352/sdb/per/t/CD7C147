{
    "collab_server" : "",
    "contents" : "require(dplyr)\nrequire(RMySQL)\nlapply( dbListConnections( dbDriver( drv = \"MySQL\")), dbDisconnect)\n\n\nget.koubeldata <- function(projectId){\n  cat(projectId,\"\\n\")\ncon <- dbConnect(MySQL(),dbname = \"kountable\", user = \"kdevdbuser\", \n                 password = \"t00rYFWOiRF\", host = \"prod-db.clv18hnrncxz.us-west-2.rds.amazonaws.com\")\nuserQuery <- paste0(\"SELECT\n                    project.id AS deal_id,\n                    project.`name` AS TradeName1,\n                    business.`name` AS ClientBusinessName1,\n                    business.contact AS ClientContactName1,\n                    project.description as productDescription1,\n                    project.frank_business_id as VARID1,\n                    'Kountable Trading Limited' as KEntity1,\n                    'Lynden John' as KSignor1,\n                    '89 Nexus Way' as KBusinessStreet1,\n                    'Camana Bay, Grand Cayman KY1-9007, Cayman Islands' as KBusinessCityStateCountry1,\n                    project.fx_reserve/100 AS fxReserve1,\n                    project.min_orig_fee AS minOrigFee1,\n                    project.origination_fee_rate/100 AS origFeeRate1,\n                    project.servicing_fee/100 AS servicingFee1,\n                    project.trade_margin/100 AS tradeMargin1,\n                    business.registration_num AS ClientBusinesRegistrationCompanyCodeTIN1,\n                    business.city AS ClientPrincipalBusinessCityStateCountry1,\n                    business.address AS ClientRegisteredAddress1,\n                    business.contact AS ClientContact1,\n                    business.phone AS ClientTelephone1,\n                    project.fx_rate AS initialFXSpotRate1,\n                    project.due_date AS DueDate1,\n                    country.name AS FrankCountry1,\n                    currency.code AS InvoiceCurrency1\n                    FROM\n                    project\n                    LEFT JOIN project_state ON project.state_id = project_state.id\n                    LEFT JOIN project_status ON project.status_id = project_status.id\n                    LEFT JOIN project_type ON project.type_id = project_type.id\n                    LEFT JOIN business ON project.frank_business_id = business.id\n                    LEFT JOIN product ON project.product_id = product.id\n                    LEFT JOIN currency ON project.invoice_currency_id = currency.id,country\n                    where business.legal_registered_country_id=country.id AND project.id=\",projectId,\"\n                    \");\ntbl.koubel <- con %>% dbGetQuery(userQuery)\nuserQuery <- paste0(\"SELECT\n                    business.dli_credit_rating AS ProcuringEntityTier,\n                    country.name AS ProcuringEntityCountry,\n                    business.`name` AS ProcuringEntity\n                    FROM\n                    project_business_assoc,business,country\n                    where business.id = project_business_assoc.business_id AND business.legal_registered_country_id=country.id AND relationship='payor' AND project_business_assoc.project_id=\",projectId,\" limit 1;\");\ntbl.payor <- con %>% dbGetQuery(userQuery)\ncurrencyConversion <- list()\ncurrencyConversion[44] <- 1.0526\ncurrencyConversion[119] <- 0.00116\ncurrencyConversion[147] <- 1\nuserQuery <- paste0(\"SELECT\n                    payable.amount,\n                    payable.currency_id,\n                    payable.project_id\n                    FROM\n                    payable\n                    where payable.project_id=\",projectId,\";\");\ntbl.payables <- con %>% dbGetQuery(userQuery)\ntbl.payables <- tbl.payables %>%\n  group_by(project_id) %>%\n  summarise(amount=sum(amount*unlist(currencyConversion[currency_id])))\ntbl.koubel <- tbl.koubel %>% mutate(ProcuringEntityTier1 = ifelse(exists('ProcuringEntityTier', where =tbl.payor),ifelse(is.na(tbl.payor$ProcuringEntityTier),0,as.numeric(tbl.payor$ProcuringEntityTier)),0),\n                            ProcuringEntity1=ifelse(exists('ProcuringEntity', where =tbl.payor),ifelse(is.na(tbl.payor$ProcuringEntity),\"\",tbl.payor$ProcuringEntity),\"\"),\n                            ProcuringEntityCountry1=ifelse(exists('ProcuringEntityCountry', where =tbl.payor),ifelse(is.na(tbl.payor$ProcuringEntityCountry),\"\",tbl.payor$ProcuringEntityCountry),\"\"),\n                            payableUSD1 = ifelse(exists('amount',where=tbl.payables),tbl.payables$amount,0))\ndbDisconnect(con)\nreturn (tbl.koubel)\n}\nget.tradeDealsData <- function(){\ncon <- dbConnect(MySQL(),dbname = \"kountable_francine\", user = \"kdevdbuser\", \n                 password = \"t00rYFWOiRF\", host = \"prod-db.clv18hnrncxz.us-west-2.rds.amazonaws.com\")\nuserQuery <- paste0(\"SELECT * from tradeDeals_copy;\")\ntbl.tradeDeals_copy <- con %>% dbGetQuery(userQuery)\ndbDisconnect(con)\nreturn(tbl.tradeDeals_copy)\n}\nformatTables <- function(tbl.table){\n  for(ci in colnames(tbl.table)) {\n    napos <- is.na(tbl.table[[ci]])\n    if(any(napos)) {\n      if(is.numeric(tbl.table[[ci]])) {\n        tbl.table[[ci]][napos] <- NA\n      }\n      if(is.character(tbl.table[[ci]])) {\n        tbl.table[[ci]][napos] <- ''\n      }\n    }\n  }\n  return(tbl.table)\n}\nkoubel_franscine_connect_dplyr <- function(){\n  kRsocket <- \"/var/run/mysql/mysql.sock\"\n  kRUser <- \"kdevdbuser\"\n  kRUserPwd <- \"t00rYFWOiRF\"\n  kRDatabase <- \"kountable_francine\"\n  kRHost <- \"prod-db.clv18hnrncxz.us-west-2.rds.amazonaws.com\"\n  kRDBPort <- 3306\n  conMySql<- dbConnect(dbDriver(\"MySQL\"), user=kRUser, password=kRUserPwd, dbname=kRDatabase, host=kRHost, port=kRDBPort,\n                       unix.socket=kRsocket, client.flag=CLIENT_MULTI_STATEMENTS)\n  db.src_mysql <- src_mysql(kRDatabase, host = kRHost, port = kRDBPort, user = kRUser, password = kRUserPwd)\n  return (db.src_mysql)\n}\ndrop_in_koubel_franscine <- function(tablename){\n  kRsocket <- \"/var/run/mysql/mysql.sock\"\n  kRUser <- \"kdevdbuser\"\n  kRUserPwd <- \"t00rYFWOiRF\"\n  kRDatabase <- \"kountable_francine\"\n  kRHost <- \"prod-db.clv18hnrncxz.us-west-2.rds.amazonaws.com\"\n  kRDBPort <- 3306\n  conMySql<- dbConnect(dbDriver(\"MySQL\"), user=kRUser, password=kRUserPwd, dbname=kRDatabase, host=kRHost, port=kRDBPort,\n                       unix.socket=kRsocket, client.flag=CLIENT_MULTI_STATEMENTS)\n  \n  ## Drop old table and create new table\n  ## drop old table using RMySQL's dbSendQuery\n  cat('+++++++++++++++++++++++++++ DROP TABLE tradeDeals +++++++++++++++++++++++\\n')\n  dbSendQuery(conMySql, paste0(\"DROP TABLE \",tablename))\n}\ncreatetable <- function(dbConnection_dplyr,tbl.table,tablename){\n  # create table with dyplyr field formats using copy_to\n  cat('+++++++++++++++++++++++++++ copy_to tradeDeals +++++++++++++++++++++++\\n')\n  copy_to(dbConnection_dplyr,formatTables(tbl.table), name=tablename, temporary = FALSE)\n  \n}\n\n\nprojectIds <- list(169,335,581,10011,10013,\n                   10014,10016,10051,10060,\n                   10078,10083,10084,10096,\n                   10108,10155,10194,10200,\n                   10203,10209,10221,10227,\n                   10253,10319,10539,10563,\n                   10564,10664,10805,10822,\n                   10881,10882,10883)\ntbl.tradeDeals_copy1 <- bind_rows(lapply(projectIds, get.koubeldata))\ntbl.tradeDeals_copy <- get.tradeDealsData()\ntbl.tradeDeals_copy <- dplyr::left_join(tbl.tradeDeals_copy, tbl.tradeDeals_copy1, by = 'deal_id')\n# tbl.tradeDeals_copy <- tbl.tradeDeals_copy %>% mutate(fxReserve = ifelse(is.na(fxReserve),fxReserve,fxReserve/100),\n#                                                       origFeeRate =  ifelse(is.na(origFeeRate),origFeeRate,origFeeRate/100),\n#                                                       servicingFee = ifelse(is.na(servicingFee),servicingFee,servicingFee/100),\n#                                                       tradeMargin = ifelse(is.na(tradeMargin),tradeMargin,tradeMargin/100))\ntbl.tradeDeals_copy <- tbl.tradeDeals_copy %>% mutate(TradeName = ifelse(is.na(TradeName),TradeName1,TradeName),\n                                                      ClientBusinessName = ifelse(is.na(ClientBusinessName),ClientBusinessName1,ClientBusinessName),\n                                                      ClientContactName = ifelse(is.na(ClientContactName),ClientContactName1,ClientContactName),\n                                                      productDescription = ifelse(is.na(productDescription),productDescription1,productDescription),\n                                                      VARID = ifelse(is.na(VARID),VARID1,VARID),\n                                                      KEntity = ifelse(is.na(KEntity),KEntity1,KEntity),\n                                                      KSignor = ifelse(is.na(KSignor),KSignor1,KSignor),\n                                                      KBusinessStreet = ifelse(is.na(KBusinessStreet),KBusinessStreet1,KBusinessStreet),\n                                                      KBusinessCityStateCountry = ifelse(is.na(KBusinessCityStateCountry),KBusinessCityStateCountry1,KBusinessCityStateCountry),\n                                                      fxReserve = ifelse(is.na(fxReserve),fxReserve1,fxReserve),\n                                                      minOrigFee = ifelse(is.na(minOrigFee),minOrigFee1,minOrigFee),\n                                                      origFeeRate =  ifelse(is.na(origFeeRate),origFeeRate1,origFeeRate),\n                                                      servicingFee = ifelse(is.na(servicingFee),servicingFee1,servicingFee),\n                                                      tradeMargin = ifelse(is.na(tradeMargin),tradeMargin1,tradeMargin),\n                                                      ClientBusinesRegistrationCompanyCodeTIN = ifelse(is.na(ClientBusinesRegistrationCompanyCodeTIN),ClientBusinesRegistrationCompanyCodeTIN1,ClientBusinesRegistrationCompanyCodeTIN),\n                                                      ClientPrincipalBusinessCityStateCountry = ifelse(is.na(ClientPrincipalBusinessCityStateCountry),ClientPrincipalBusinessCityStateCountry1,ClientPrincipalBusinessCityStateCountry),\n                                                      ClientRegisteredAddress = ifelse(is.na(ClientRegisteredAddress),ClientRegisteredAddress1,ClientRegisteredAddress),\n                                                      ClientContact = ifelse(is.na(ClientContact),ClientContact1,ClientContact),\n                                                      ClientTelephone = ifelse(is.na(ClientTelephone),ClientTelephone1,ClientTelephone),\n                                                      initialFXSpotRate = ifelse(is.na(initialFXSpotRate),initialFXSpotRate1,initialFXSpotRate),\n                                                      DueDate = ifelse(is.na(DueDate),DueDate1,DueDate),\n                                                      FrankCountry = ifelse(is.na(FrankCountry),FrankCountry1,FrankCountry),\n                                                      InvoiceCurrency = ifelse(is.na(InvoiceCurrency),InvoiceCurrency1,InvoiceCurrency),\n                                                      ProcuringEntityTier = ifelse(is.na(ProcuringEntityTier),ProcuringEntityTier1,ProcuringEntityTier),                                    \n                                                      ProcuringEntity=ifelse(is.na(ProcuringEntity),ProcuringEntity1,ProcuringEntity),\n                                                      ProcuringEntityCountry= ifelse(is.na(ProcuringEntityCountry),ProcuringEntityCountry1,ProcuringEntityCountry),\n                                                      payableUSD = ifelse(is.na(payableUSD),payableUSD1,payableUSD)) \n                                                      \n\ntbl.tradeDeals_copy <- tbl.tradeDeals_copy %>% select(-TradeName1,-ClientBusinessName1,-ClientContactName1,-productDescription1,-VARID1,-KEntity1,\n                                                      -KSignor1,-KBusinessStreet1,-KBusinessCityStateCountry1,-fxReserve1,-minOrigFee1,\n                                                      -origFeeRate1,-servicingFee1,-tradeMargin1,-ClientBusinesRegistrationCompanyCodeTIN1,\n                                                      -ClientPrincipalBusinessCityStateCountry1,-ClientRegisteredAddress1,-ClientContact1,\n                                                      -ClientTelephone1,-initialFXSpotRate1,-DueDate1,-FrankCountry1,-InvoiceCurrency1,\n                                                      -ProcuringEntityTier1,-ProcuringEntity1,-ProcuringEntityCountry1,-payableUSD1)\ndrop_in_koubel_franscine(\"tradeDeals_copy\")\nkoubel_franscine_dplyr <- koubel_franscine_connect_dplyr()\ncreatetable(koubel_franscine_dplyr,tbl.tradeDeals_copy,\"tradeDeals_copy\")\n",
    "created" : 1487888245687.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "5|38|74|0|\n75|33|82|0|\n83|36|96|0|\n97|45|108|0|\n109|48|123|0|\n",
    "hash" : "4101111213",
    "id" : "CD7C147",
    "lastKnownWriteTime" : 1488473153,
    "last_content_update" : 1488555209023,
    "path" : "~/Rproject/dataTransfer/koubelToTradeDeal.R",
    "project_path" : "koubelToTradeDeal.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}